# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.db.models.deletion
from decimal import Decimal
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ('flatpages', '0001_initial'),
        ('sites', '0001_initial'),
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ATSSourceCode',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(default=b'', max_length=200)),
                ('value', models.CharField(default=b'', max_length=200)),
                ('ats_name', models.CharField(default=b'', max_length=200)),
            ],
            options={
                'verbose_name': 'ATS Source Code',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BillboardHotspot',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(help_text=b'Max 50 characters', max_length=50, verbose_name=b'Title')),
                ('text', models.CharField(help_text=b'Max 140 characters.  Use HTML markup for line breaks and formatting.', max_length=140, verbose_name=b'Text')),
                ('url', models.URLField(null=True, verbose_name=b'URL', blank=True)),
                ('display_url', models.TextField(null=True, verbose_name=b'Display URL', blank=True)),
                ('offset_x', models.IntegerField(verbose_name=b'Offset X')),
                ('offset_y', models.IntegerField(verbose_name=b'Offset Y')),
                ('primary_color', models.CharField(default=b'5A6D81', max_length=6, verbose_name=b'Primary Color')),
                ('font_color', models.CharField(default=b'FFFFFF', max_length=6, verbose_name=b'Font Color')),
                ('border_color', models.CharField(default=b'FFFFFF', max_length=6, verbose_name=b'Border Color')),
            ],
            options={
                'verbose_name': 'Billboard Hotspot',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BillboardImage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=200, verbose_name=b'Title')),
                ('image_url', models.URLField(verbose_name=b'Image URL')),
                ('copyright_info', models.CharField(max_length=200, verbose_name=b'Copyright Info')),
                ('source_url', models.URLField(verbose_name=b'Source URL')),
                ('logo_url', models.URLField(null=True, verbose_name=b'Logo Image URL', blank=True)),
                ('sponsor_url', models.URLField(null=True, verbose_name=b'Logo Sponsor URL', blank=True)),
            ],
            options={
                'verbose_name': 'Billboard Image',
                'verbose_name_plural': 'Billboard Images',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BusinessUnit',
            fields=[
                ('id', models.IntegerField(max_length=10, serialize=False, verbose_name=b'Business Unit Id', primary_key=True)),
                ('title', models.CharField(max_length=500, null=True, blank=True)),
                ('title_slug', models.SlugField(max_length=500, null=True, blank=True)),
                ('date_crawled', models.DateTimeField(verbose_name=b'Date Crawled')),
                ('date_updated', models.DateTimeField(verbose_name=b'Date Updated')),
                ('associated_jobs', models.IntegerField(default=0, verbose_name=b'Associated Jobs')),
                ('federal_contractor', models.BooleanField(default=False)),
                ('ignore_includeinindex', models.BooleanField(default=False, verbose_name=b'Ignore "Include In Index"')),
                ('enable_markdown', models.BooleanField(default=True, verbose_name=b'Enable Markdown for job descriptions')),
            ],
            options={
                'verbose_name': 'Business Unit',
                'verbose_name_plural': 'Business Units',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=200, verbose_name=b'Name')),
                ('company_slug', models.SlugField(max_length=200, null=True, verbose_name=b'Company Slug', blank=True)),
                ('logo_url', models.URLField(help_text=b'The url for the 100x50 logo image for this company.', null=True, verbose_name=b'Logo URL', blank=True)),
                ('linkedin_id', models.CharField(help_text=b'The LinkedIn issued company ID for this company.', max_length=20, null=True, verbose_name=b'LinkedIn Company ID', blank=True)),
                ('og_img', models.URLField(help_text=b'The url for the large format logo for use when sharing jobs on LinkedIn, and other social platforms that support OpenGraph.', null=True, verbose_name=b'Open Graph Image URL', blank=True)),
                ('canonical_microsite', models.URLField(help_text=b'The primary directemployers microsite for this company.', null=True, verbose_name=b'Canonical Microsite URL', blank=True)),
                ('member', models.BooleanField(default=False, verbose_name=b'DirectEmployers Association Member')),
                ('digital_strategies_customer', models.BooleanField(default=False, verbose_name=b'Digital Strategies Customer')),
                ('enhanced', models.BooleanField(default=False, verbose_name=b'Enhanced')),
                ('prm_access', models.BooleanField(default=False)),
                ('product_access', models.BooleanField(default=False)),
                ('posting_access', models.BooleanField(default=False)),
                ('user_created', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CompanyUser',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date_added', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'mydashboard_companyuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=50, null=True)),
                ('status', models.IntegerField(default=1, choices=[(1, b'Staging'), (2, b'Production')], blank=True, null=True, verbose_name=b'Status', db_index=True)),
                ('defaultBlurb', models.TextField(null=True, verbose_name=b'Blurb Text', blank=True)),
                ('defaultBlurbTitle', models.CharField(max_length=100, null=True, verbose_name=b'Blurb Title', blank=True)),
                ('browse_country_show', models.BooleanField(default=True, verbose_name=b'Show')),
                ('browse_state_show', models.BooleanField(default=True, verbose_name=b'Show')),
                ('browse_city_show', models.BooleanField(default=True, verbose_name=b'Show')),
                ('browse_title_show', models.BooleanField(default=True, verbose_name=b'Show')),
                ('browse_facet_show', models.BooleanField(default=False, verbose_name=b'Show')),
                ('browse_facet_show_2', models.BooleanField(default=False, verbose_name=b'Show')),
                ('browse_facet_show_3', models.BooleanField(default=False, verbose_name=b'Show')),
                ('browse_moc_show', models.BooleanField(default=False, verbose_name=b'Show')),
                ('browse_company_show', models.BooleanField(default=False, verbose_name=b'Show')),
                ('browse_country_text', models.CharField(default=b'Country', max_length=50, verbose_name=b'Heading for Country Facet')),
                ('browse_state_text', models.CharField(default=b'State', max_length=50, verbose_name=b'Heading for State Facet')),
                ('browse_city_text', models.CharField(default=b'City', max_length=50, verbose_name=b'Heading for City Facet')),
                ('browse_title_text', models.CharField(default=b'Title', max_length=50, verbose_name=b'Heading for Title Facet')),
                ('browse_facet_text', models.CharField(default=b'Job Profiles', max_length=50, verbose_name=b'Heading for Custom Facet Group 1')),
                ('browse_facet_text_2', models.CharField(default=b'Job Profiles', max_length=50, verbose_name=b'Heading for Custom Facet Group 2')),
                ('browse_facet_text_3', models.CharField(default=b'Job Profiles', max_length=50, verbose_name=b'Heading for Custom Facet Group 3')),
                ('browse_moc_text', models.CharField(default=b'Military Titles', max_length=50, verbose_name=b'Heading for MOC Facet')),
                ('browse_company_text', models.CharField(default=b'Company', max_length=50, verbose_name=b'Heading for Company Facet')),
                ('browse_country_order', models.IntegerField(default=3, verbose_name=b'Order', choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)])),
                ('browse_state_order', models.IntegerField(default=4, verbose_name=b'Order', choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)])),
                ('browse_city_order', models.IntegerField(default=5, verbose_name=b'Order', choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)])),
                ('browse_title_order', models.IntegerField(default=6, verbose_name=b'Order', choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)])),
                ('browse_facet_order', models.IntegerField(default=2, verbose_name=b'Order', choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)])),
                ('browse_facet_order_2', models.IntegerField(default=2, verbose_name=b'Order', choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)])),
                ('browse_facet_order_3', models.IntegerField(default=2, verbose_name=b'Order', choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)])),
                ('browse_moc_order', models.IntegerField(default=1, verbose_name=b'Order', choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)])),
                ('browse_company_order', models.IntegerField(default=7, verbose_name=b'Order', choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)])),
                ('num_subnav_items_to_show', models.IntegerField(default=9, verbose_name=b'Subnav Options Shown')),
                ('num_filter_items_to_show', models.IntegerField(default=10, verbose_name=b'Filter Options Shown')),
                ('num_job_items_to_show', models.IntegerField(default=15, verbose_name=b'Job Listings Shown')),
                ('location_tag', models.CharField(default=b'jobs', max_length=50)),
                ('title_tag', models.CharField(default=b'jobs-in', max_length=50)),
                ('facet_tag', models.CharField(default=b'new-jobs', max_length=50)),
                ('moc_tag', models.CharField(default=b'vet-jobs', max_length=50)),
                ('company_tag', models.CharField(default=b'careers', max_length=50)),
                ('meta', models.TextField(null=True, blank=True)),
                ('wide_header', models.TextField(null=True, blank=True)),
                ('header', models.TextField(null=True, blank=True)),
                ('body', models.TextField(null=True, verbose_name=b'Custom Homepage Body', blank=True)),
                ('wide_footer', models.TextField(null=True, blank=True)),
                ('footer', models.TextField(null=True, blank=True)),
                ('view_all_jobs_detail', models.BooleanField(default=False, help_text=b'Include site title details in "View All Jobs" link text', verbose_name=b'Use detailed "View All Jobs" label')),
                ('directemployers_link', models.URLField(default=b'http://directemployers.org')),
                ('show_social_footer', models.BooleanField(default=True, help_text=b'Include social footer on job listing pages.', verbose_name=b'Show Social Footer')),
                ('backgroundColor', models.CharField(max_length=6, null=True, blank=True)),
                ('fontColor', models.CharField(default=b'666666', max_length=6)),
                ('primaryColor', models.CharField(default=b'990000', max_length=6)),
                ('revision', models.IntegerField(default=1, verbose_name=b'Revision')),
                ('home_page_template', models.CharField(default=b'home_page/home_page_listing.html', max_length=200, verbose_name=b'Home Page Template')),
                ('show_home_microsite_carousel', models.BooleanField(default=False, verbose_name=b'Show Microsite Carousel on Home Page')),
                ('show_home_social_footer', models.BooleanField(default=False, verbose_name=b'Show Social Footer on Home Page')),
                ('publisher', models.CharField(help_text=b'Google plus page id for publisher tag', max_length=50, verbose_name=b'Google plus page id', blank=True)),
                ('percent_featured', models.DecimalField(default=Decimal('0.5'), verbose_name=b'Featured Jobs Maximum Percentage', max_digits=3, decimal_places=2, validators=[django.core.validators.MaxValueValidator(Decimal('1.00'))])),
                ('show_saved_search_widget', models.BooleanField(default=False, help_text=b'Show saved search widget on job listing page.')),
                ('moc_label', models.CharField(max_length=255, blank=True)),
                ('what_label', models.CharField(max_length=255, blank=True)),
                ('where_label', models.CharField(max_length=255, blank=True)),
                ('moc_placeholder', models.CharField(max_length=255, blank=True)),
                ('what_placeholder', models.CharField(max_length=255, blank=True)),
                ('where_placeholder', models.CharField(max_length=255, blank=True)),
                ('moc_helptext', models.TextField(blank=True)),
                ('what_helptext', models.TextField(blank=True)),
                ('where_helptext', models.TextField(blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('abbrev', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
                ('abbrev_short', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CustomFacet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(help_text=b'A concise and descriptive name for\n                                       this saved search, e.g.: Nursing Jobs,\n                                       Tech Support Jobs in Texas', max_length=100)),
                ('name_slug', models.SlugField(max_length=100, null=True, blank=True)),
                ('date_created', models.DateField(auto_now=True)),
                ('querystring', models.CharField(max_length=2000, null=True, blank=True)),
                ('title', models.CharField(help_text=b"\n                                        A comma-separated list of job titles to\n                                        search on. Terms entered here will refer\n                                        to job titles as provided in your\n                                        company's job listings. e.g.:\n                                        Dental Technician,Office Assistant\n                                        ", max_length=800, null=True, blank=True)),
                ('url_slab', models.CharField(max_length=255, null=True, blank=True)),
                ('blurb', models.TextField(null=True, blank=True)),
                ('show_blurb', models.BooleanField(default=True, verbose_name=b'Use Saved Search Blurb')),
                ('show_production', models.BooleanField(default=False, verbose_name=b'Show in Production')),
                ('country', models.CharField(max_length=800, null=True, blank=True)),
                ('state', models.CharField(max_length=800, null=True, blank=True)),
                ('city', models.CharField(max_length=800, null=True, blank=True)),
                ('company', models.CharField(max_length=800, null=True, blank=True)),
                ('onet', models.CharField(max_length=10, null=True, blank=True)),
                ('always_show', models.BooleanField(default=False, verbose_name=b'Show With or Without Results')),
                ('saved_querystring', models.CharField(max_length=10000, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CustomPage',
            fields=[
                ('flatpage_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='flatpages.FlatPage')),
                ('meta', models.TextField(blank=True)),
                ('meta_description', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'verbose_name': 'Custom Page',
                'verbose_name_plural': 'Custom Pages',
            },
            bases=('flatpages.flatpage',),
        ),
        migrations.CreateModel(
            name='FeaturedCompany',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('is_featured', models.BooleanField(default=False, verbose_name=b'Featured Company?')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GoogleAnalytics',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('web_property_id', models.CharField(max_length=20, verbose_name=b'Web Property ID')),
            ],
            options={
                'verbose_name': 'Google Analytics',
                'verbose_name_plural': 'Google Analytics',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GoogleAnalyticsCampaign',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(default=b'', max_length=200)),
                ('campaign_source', models.CharField(default=b'', help_text=b' (referrer: google, citysearch, newsletter4)', max_length=200)),
                ('campaign_medium', models.CharField(default=b'', help_text=b' (marketing medium: cpc, banner, email)', max_length=200)),
                ('campaign_name', models.CharField(default=b'', help_text=b'(product, promo code, or slogan)', max_length=200)),
                ('campaign_term', models.CharField(default=b'', help_text=b'(identify the paid keywords)', max_length=200)),
                ('campaign_content', models.CharField(default=b'', help_text=b'(use to differentiate ads)', max_length=200)),
            ],
            options={
                'verbose_name': 'Google Analytics Campaign',
                'verbose_name_plural': 'Google Analytics Campaigns',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='jobListing',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('city', models.CharField(max_length=200, null=True, blank=True)),
                ('citySlug', models.SlugField(null=True, blank=True)),
                ('country', models.CharField(max_length=200, null=True, blank=True)),
                ('countrySlug', models.SlugField(null=True, blank=True)),
                ('country_short', models.CharField(db_index=True, max_length=3, null=True, blank=True)),
                ('date_new', models.DateTimeField(verbose_name=b'date new')),
                ('date_updated', models.DateTimeField(verbose_name=b'date updated')),
                ('description', models.TextField()),
                ('hitkey', models.CharField(max_length=50)),
                ('link', models.URLField()),
                ('location', models.CharField(max_length=200, null=True, blank=True)),
                ('reqid', models.CharField(max_length=50, null=True, blank=True)),
                ('state', models.CharField(max_length=200, null=True, blank=True)),
                ('stateSlug', models.SlugField(null=True, blank=True)),
                ('state_short', models.CharField(max_length=3, null=True, blank=True)),
                ('title', models.CharField(max_length=200)),
                ('titleSlug', models.SlugField(max_length=200, null=True, blank=True)),
                ('uid', models.IntegerField(unique=True, db_index=True)),
                ('zipcode', models.CharField(max_length=15, null=True, blank=True)),
            ],
            options={
                'verbose_name': 'Job Listing',
                'verbose_name_plural': 'Job Listings',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SeoSite',
            fields=[
                ('site_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='sites.Site')),
                ('site_title', models.CharField(default=b'', max_length=200, verbose_name=b'Site Title', blank=True)),
                ('site_heading', models.CharField(default=b'', max_length=200, verbose_name=b'Site Heading', blank=True)),
                ('site_description', models.CharField(default=b'', max_length=200, verbose_name=b'Site Description', blank=True)),
                ('postajob_filter_type', models.CharField(default=b'this site only', max_length=255, choices=[(b'this site only', b'this site only'), (b'sites associated with the company that owns this site', b'sites associated with the company that owns this site'), (b'network sites and sites associated with the company that owns this site', b'network sites and sites associated with the company that owns this site'), (b'all sites', b'all sites'), (b'network sites only', b'network sites only'), (b'network sites and this site', b'network sites and this site')])),
                ('email_domain', models.CharField(default=b'my.jobs', max_length=255)),
                ('ats_source_codes', models.ManyToManyField(to='seo.ATSSourceCode', null=True, blank=True)),
                ('billboard_images', models.ManyToManyField(to='seo.BillboardImage', null=True, blank=True)),
                ('business_units', models.ManyToManyField(to='seo.BusinessUnit', null=True, blank=True)),
                ('canonical_company', models.ForeignKey(related_name='canonical_company_for', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='seo.Company', null=True)),
                ('configurations', models.ManyToManyField(to='seo.Configuration', blank=True)),
            ],
            options={
                'verbose_name': 'Seo Site',
                'verbose_name_plural': 'Seo Sites',
            },
            bases=('sites.site',),
        ),
        migrations.CreateModel(
            name='SeoSiteFacet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('facet_group', models.IntegerField(default=1, choices=[(1, b'Facet Group 1'), (2, b'Facet Group 2'), (3, b'Facet Group 3')])),
                ('facet_type', models.CharField(default=b'STD', max_length=4, verbose_name=b'Facet Type', db_index=True, choices=[(b'STD', b'Standard'), (b'DFT', b'Default'), (b'FTD', b'Featured')])),
                ('boolean_operation', models.CharField(default=b'or', max_length=3, verbose_name=b'Boolean Operation', db_index=True, choices=[(b'or', b'OR'), (b'and', b'AND')])),
                ('customfacet', models.ForeignKey(verbose_name=b'Custom Facet', to='seo.CustomFacet')),
                ('seosite', models.ForeignKey(verbose_name=b'Seo Site', to='seo.SeoSite')),
            ],
            options={
                'verbose_name': 'Seo Site Facet',
                'verbose_name_plural': 'Seo Site Facets',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SeoSiteRedirect',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('redirect_url', models.CharField(max_length=100, verbose_name=b'domain name', db_index=True)),
                ('seosite', models.ForeignKey(to='seo.SeoSite')),
            ],
            options={
                'verbose_name': 'Seo Site Redirect',
                'verbose_name_plural': 'Seo Site Redirects',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SiteTag',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('site_tag', models.CharField(unique=True, max_length=100, verbose_name=b'Site Tag')),
                ('tag_navigation', models.BooleanField(default=False, help_text=b'Tag can be used for navigation by users. Viewable by public.', verbose_name=b'Tag can be used for navigation')),
                ('is_site_family', models.BooleanField(default=False, help_text=b'Site tag represents a family of sites.', verbose_name=b'Tag represents site family')),
                ('parent', models.ForeignKey(blank=True, to='seo.SeoSite', help_text=b'The parent site if the tag is a for a site family.', null=True)),
            ],
            options={
                'verbose_name': 'Site Tag',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SpecialCommitment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=200)),
                ('commit', models.CharField(help_text=b'VeteranCommit, SummerCommit, etc...', max_length=200, verbose_name=b'Schema.org Commit Code')),
            ],
            options={
                'verbose_name': 'Special Commitment',
                'verbose_name_plural': 'Special Commitments',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('nation', models.ForeignKey(to='seo.Country')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ViewSource',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(default=b'', max_length=200)),
                ('view_source', models.IntegerField(null=True, max_length=20)),
            ],
            options={
                'verbose_name': 'View Source',
                'verbose_name_plural': 'View Sources',
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='state',
            unique_together=set([('name', 'nation')]),
        ),
        migrations.AlterUniqueTogether(
            name='seositeredirect',
            unique_together=set([('redirect_url', 'seosite')]),
        ),
        migrations.AddField(
            model_name='seosite',
            name='facets',
            field=models.ManyToManyField(to='seo.CustomFacet', null=True, through='seo.SeoSiteFacet', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='seosite',
            name='featured_companies',
            field=models.ManyToManyField(to='seo.Company', null=True, blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='seosite',
            name='google_analytics',
            field=models.ManyToManyField(to='seo.GoogleAnalytics', null=True, blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='seosite',
            name='google_analytics_campaigns',
            field=models.ForeignKey(blank=True, to='seo.GoogleAnalyticsCampaign', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='seosite',
            name='group',
            field=models.ForeignKey(to='auth.Group', null=True),
            preserve_default=True,
        ),
    ]
